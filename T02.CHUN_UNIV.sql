--=============================================--
-- BASIC SELECT
--=============================================--
--SELECT * FROM TB_DEPARTMENT;
-- 1. 학과명 표시
SELECT DEPARTMENT_NAME AS "학과 명", 
  CATEGORY AS 계열 
FROM TB_DEPARTMENT;

-- 2. 학과 정원 표시
SELECT DEPARTMENT_NAME||'의 정원은 '||
  CAPACITY||'명 입니다.'
FROM TB_DEPARTMENT;

-- 3. 장기 연체자 정보 출력
SELECT STUDENT_NAME 
FROM TB_STUDENT
WHERE STUDENT_NO IN ('A513079', 
                    'A513090', 
                    'A513091', 
                    'A513110',
                    'A513119')
ORDER BY STUDENT_NAME DESC;

-- 4. 특정 입학 정원 학과 출력
SELECT DEPARTMENT_NAME, CATEGORY
FROM TB_DEPARTMENT
WHERE CAPACITY BETWEEN 20 AND 30;

-- 5. 총장 출력
SELECT PROFESSOR_NAME
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;

-- 6. 학과가 지정되지 않은 학생 출력
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;

-- 7. 수강신청 선수과목 존재 여부 출력
SELECT CLASS_NO
FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

-- 8. 존재하는 계열  출력
SELECT DISTINCT CATEGORY
FROM TB_DEPARTMENT
ORDER BY CATEGORY ASC;

-- 9. 02.학번 모임을 만들되, 휴학한 사람을 제외한 재학중인
--    학우 출력
SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'N'
  AND STUDENT_ADDRESS LIKE '%전주%'
  AND EXTRACT(YEAR FROM ENTRANCE_DATE) = '2002';
  
--=============================================--
-- ADDITIONAL SELECT
--=============================================--

-- 1. 영어영문학과 학생들의 학번, 이름, 입학 년도를
--    빠른 순으로 표시하는 SQL
SELECT STUDENT_NO, STUDENT_NAME, ENTRANCE_DATE
FROM TB_STUDENT
WHERE DEPARTMENT_NO IN ('002')
ORDER BY 3 ASC;

-- 2. 교수 중 이름이 3글자가 아닌 교수를 표시하는 SQL
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE LENGTH(PROFESSOR_NAME) <> 3;
--  3글자가 아니지만 3글자보다 작은지 큰지 
--    명확한 기준을 주지 않아서 다중 ROW가 반환됨

-- 3. 교수의 이름과 나이를 출력하되 나이가 적은 사람부터 출력
SELECT PROFESSOR_NAME 교수이름,
  TO_NUMBER(EXTRACT(YEAR FROM SYSDATE)) - TO_NUMBER(EXTRACT(YEAR FROM TO_DATE(SUBSTR(PROFESSOR_SSN, 1, 6), 'RR/MM/DD'))) AS 나이,
  PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE EXTRACT(YEAR FROM TO_DATE(SUBSTR(PROFESSOR_SSN, 1, 6), 'RR/MM/DD')) <= EXTRACT(YEAR FROM TO_DATE('2001/01/01', 'RRRR/MM/DD'))
  AND SUBSTR(PROFESSOR_SSN, 8, 1) = '1'
ORDER BY 2 ASC;

SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE EXTRACT(YEAR FROM TO_DATE(ENTRANCE_DATE, 'RR/MM/DD')) - EXTRACT(YEAR FROM TO_DATE(SUBSTR(STUDENT_SSN, 1, 6), 'RR/MM/DD')) > 19;


SELECT STUDENT_NAME, COUNT(STUDENT_NAME) FROM TB_STUDENT
GROUP BY STUDENT_NAME
HAVING COUNT(STUDENT_NAME) > 1;

SELECT T1.년도, T1.학기, ROUND(AVG(T1.성적), 1) AS 평점
FROM (
  SELECT SUBSTR(TERM_NO, 1, 4) 년도, SUBSTR(TERM_NO, 5, 2) 학기, SUM(POINT) 성적 
  FROM TB_GRADE 
  WHERE STUDENT_NO IN (SELECT STUDENT_NO FROM TB_STUDENT WHERE STUDENT_NO = 'A112113')
  group by SUBSTR(TERM_NO, 1, 4), SUBSTR(TERM_NO, 5, 2)) T1
GROUP BY ROLLUP(T1.년도, T1.학기);



--==============================================================================================================
-- 1.
SELECT STUDENT_NAME AS "학생 이름", STUDENT_ADDRESS AS "주소지"
FROM TB_STUDENT
ORDER BY STUDENT_NAME ASC;
-- 2.
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY TO_DATE(SUBSTR(STUDENT_SSN, 1, 6), 'RR/MM/DD') DESC;
-- 3.
SELECT STUDENT_NAME 학생이름, STUDENT_NO 학번, STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT
WHERE STUDENT_NO LIKE '99%'
ORDER BY 학생이름 ASC;
-- 4.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = (
  SELECT DEPARTMENT_NO FROM TB_DEPARTMENT
  WHERE DEPARTMENT_NAME = '법학과')
ORDER BY TO_DATE(SUBSTR(PROFESSOR_SSN, 1, 6), 'RR/MM/DD') ASC;
-- 5.
SELECT STUDENT_NO, TO_CHAR(POINT, 9.99)
FROM TB_GRADE
WHERE CLASS_NO = 'C3118100'
  AND TERM_NO = '200402'
ORDER BY POINT DESC, STUDENT_NO ASC;
-- 6.
SELECT STUDENT_NO, STUDENT_NAME, D.DEPARTMENT_NAME
FROM TB_STUDENT S, TB_DEPARTMENT D
WHERE S.DEPARTMENT_NO = D.DEPARTMENT_NO
ORDER BY STUDENT_NAME ASC;
-- 7.
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS C, TB_DEPARTMENT D
WHERE C.DEPARTMENT_NO = D.DEPARTMENT_NO;
-- 8.
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS C, TB_CLASS_PROFESSOR CP, TB_PROFESSOR P
WHERE C.CLASS_NO = CP.CLASS_NO
  AND CP.PROFESSOR_NO = P.PROFESSOR_NO;
-- 9.
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS C, TB_DEPARTMENT D, TB_CLASS_PROFESSOR CP, TB_PROFESSOR P
WHERE C.DEPARTMENT_NO = D.DEPARTMENT_NO
  AND C.CLASS_NO = CP.CLASS_NO
  AND CP.PROFESSOR_NO = P.PROFESSOR_NO
  AND D.CATEGORY = '인문사회';
-- 10.
SELECT T.STUDENT_NO, S.STUDENT_NAME, T.SCORE
FROM (
  SELECT G.STUDENT_NO, ROUND(SUM(POINT) / COUNT(*), 1) AS SCORE
  FROM TB_GRADE G, TB_STUDENT S
  WHERE G.STUDENT_NO = S.STUDENT_NO
    AND CLASS_NO IN (SELECT CLASS_NO
    FROM TB_CLASS C, TB_DEPARTMENT D
    WHERE C.DEPARTMENT_NO = D.DEPARTMENT_NO
      AND DEPARTMENT_NAME = '음악학과')
  GROUP BY G.STUDENT_NO) T, TB_STUDENT S
WHERE T.STUDENT_NO = S.STUDENT_NO
ORDER BY 1 ASC;